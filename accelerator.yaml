accelerator:
  displayName: Spring Cloud Function Serverless JVM/Native App on Knative
  description: A simple Spring Cloud Function-based serverless app with JVM/GraalVM Native Image Compilation
  iconUrl: https://raw.githubusercontent.com/simple-starters/icons/master/icon-tanzu-light.png
  tags:
    - spring
    - cloud
    - function
    - serverless
    - native
  options:
    - name: artifactId
      label: Artifact ID
      description: Knative function sample name
      required: true
      dataType: string
      inputType: text
      defaultValue: hello-function
    - name: activeProfiles
      label: Build Profile choices
      description: Choose JVM and Native Build profiles
      inputType: checkbox
      dataType: [string]
      required: true
      choices:
      - value: jvm
        text: JVM stand-alone app
      - value: jvm-image
        text: JVM App in lightweight Docker container
      - value: native
        text: Spring Native stand-alone app
      - value: native-image
        text: Spring Native App in lightweight Docker container
      defaultValue: jvm
    - name: deploymentType
      labeL: Deployment Model choices
      inputType: select
      description: Select the deployment model for your service
      choices:
      - value: none
        text: Skip deployment configurations
      - value: kubernetes-resource-simple 
        text: Kubernetes Deployment and Service
      - value: knative-resource-simple 
        text: Knative Service Deployment
      defaultValue: none
    - name: includeKpackImage
      label: Generate kpack file
      description: Include a kpack image YAML file
      dataType: boolean
      defaultValue: false
      inputType: toggle
    - name: prefixContainerRegistryName
      label: Registry Prefix
      description: Container Registry prefix, ex. gcr.io/project-name
      dataType: string
      inputType: text
      defaultValue: docker.io/triathlonguy/

engine:
  merge:
  - includes: [ "**" ]
    excludes: [ "kubernetes/**" ]
  - includes: [ "pom.xml" ]
    transformations:
    - type: ReplaceText
      substitutions:
      - text: hello-function
        with: "#artifactId"
  - includes: [ "pom.xml" ]
    condition: "!(#activeProfiles.contains('jvm'))"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: <!--start-jvm-->
        with: <!--start-jvm
      - text: <!--end-jvm-->
        with: end-jvm-->
  - includes: ["kubernetes/kn/*/service*.yaml"]
    condition: "#deploymentType == 'knative-resource-simple'"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: "hello-function"
        with: "#artifactId" 
  - includes: ["kubernetes/k8s/service.yaml", "kubernetes/k8s/deployment.yaml"]
    condition: "#deploymentType == 'kubernetes-resource-simple'"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: "hello-function"
        with: "#artifactId"         
  - includes: ["kubernetes/kn/*/image*.yaml"]
    condition: "#includeKpackImage"
    # logical operators for conditions
    # condition: "#includeKpackImage and #deploymentType == 'none'"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: "hello-function"
        with: "#artifactId"

  - includes: ["kubernetes/kn/*/service*.yaml"]
    condition: "#deploymentType == 'knative-resource-simple'"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: "registryPrefix"
        with: "#prefixContainerRegistryName" 
  - includes: ["kubernetes/k8s/service.yaml", "kubernetes/k8s/deployment.yaml"]
    condition: "#deploymentType == 'kubernetes-resource-simple'"
    transformations:
    - type: ReplaceText
      substitutions:
      - text: "registryPrefix"
        with: "#prefixContainerRegistryName" 



  # - includes: [ "kubernetes/k8s/skaffold.yaml" ]
  #     condition: "#deploymentType == 'kubernetes-resource-simple'"
  #     transformations:
  #     - type: ReplaceText
  #       substitutions:
  #       - text: "hello-function"
  #         with: "#artifactId"
  #     - type: RewritePath
  #       rewriteTo: "#filename"        
